def convert_id_function(name: str):
    return name[:-2] + "Id" if name[-2:].lower() == "id" else name

def _convert_uppercase(name: str):
    return name[0].upper() + name[1:]

def upper_camel_case_dict_keys(d):
    """
    Convert a nested dictionary to have the first letter uppercase, and any trailing id or Id as ID.
    Args:
        d (dict): dictionary (nested or not) to be converted.
    Returns:
        Dictionary with the new keys.
    """
    if not isinstance(d, dict):
        return d
    new = {}
    for k, v in d.items():
        new_v = v
        if isinstance(v, dict):
            new_v = upper_camel_case_dict_keys(v)
        elif isinstance(v, list):
            new_v = list()
            for x in v:
                new_v.append(upper_camel_case_dict_keys(x))
        new[_convert_uppercase(convert_id_function(k))] = new_v
    return new