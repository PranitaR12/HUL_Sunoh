from marshmallow_dataclass import dataclass
from dataclasses import field
from datalab_sdk.api.common.schema import CamelCaseSchema
from typing import Union
from datalab_sdk.api.mme.types.requests.model_reference import FixedModelReference
from datalab_sdk.api.mme.types.shared.enums import ModelClass, ModelState


@dataclass(base_schema=CamelCaseSchema)
class ModelDefinition:
    model_id: str
    business_key: str
    display_name: str
    version: str
    business_domain: str
    model_category: str
    model_classification: ModelClass = field(metadata=dict(by_value=True))
    registered: str
    model_state: ModelState = field(metadata=dict(by_value=True))

    @property
    def fixed_model_reference(self) -> FixedModelReference:
        return FixedModelReference(
            version=self.version,
            business_domain=self.business_domain,
            business_key=self.business_key,
        )
