from marshmallow_dataclass import dataclass
from datalab_sdk.api.common.schema import CamelCaseSchema


@dataclass(base_schema=CamelCaseSchema)
class DatumKey:
    business_domain: str
    business_key: str

    def to_hash_key(self) -> str:
        return self.business_domain.upper() + "/" + self.business_key.upper()

    @classmethod
    def from_hash_key(cls, hash_key: str):
        parts = hash_key.split("/")
        return cls(parts[0], parts[1])

    def __eq__(self, other):
        if isinstance(other, self.__class__):
            return (
                self.business_key.lower() == other.business_key.lower()
                and self.business_domain.lower() == other.business_domain.lower()
            )
        else:
            return False

    def __ne__(self, other):
        return not self.__eq__(other)

    def __hash__(self):
        return hash(self.to_hash_key())

