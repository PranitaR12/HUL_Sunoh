from marshmallow_dataclass import dataclass
from typing import Union
from datalab_sdk.api.common.schema import CamelCaseSchema
from datetime import datetime
import iso8601

@dataclass(base_schema=CamelCaseSchema)
class TimePoint:
    date: str
    string: Union[str, None] = None
    number: Union[float, int, None] = None

    def date_as_datetime(self) -> datetime:
        return iso8601.parse_date(self.date)

    @classmethod
    def from_datetime(
        cls,
        date: datetime,
        string: Union[str, None] = None,
        number: Union[float, int, None] = None,
    ):
        return cls(date=date.isoformat().split('T')[0], string=string, number=number)

    def __str__(self):
        if self.string is not None:
            return f"{self.string}@{self.date}"
        if self.number is not None:
            return f"{self.number}@{self.date}"
        return f"@{self.date}"
