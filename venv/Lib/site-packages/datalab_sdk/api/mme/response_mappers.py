from datalab_sdk.api.mme.basic import InputDefinition
from typing import List
# import all the mappers to help clients find them
from datalab_sdk.api.mme.response_mapper import ResponseMapper
from datalab_sdk.api.mme.list_value_mapper import ToListValueMapper
from datalab_sdk.api.mme.named_value_mapper import NamedValueArrayMapper

class ResponseMapperSet:
    """ Holds a list of custom mappers and determines which to apply to an input """

    def __init__(self, mappers: List[ResponseMapper] = None):
        self.__default = ResponseMapper()
        if mappers is None:
            self.__mappers = []
        else:
            self.__mappers = mappers

    def get_mapper_for_input(self, input: InputDefinition) -> ResponseMapper:
        if self.__mappers is not None:
          for mapper in self.__mappers:
              if mapper.applies_to(input):
                  return mapper
        return self.__default
