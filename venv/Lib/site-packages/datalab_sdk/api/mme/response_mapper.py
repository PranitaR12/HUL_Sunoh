from datalab_sdk.api.mme.basic import (
    InputDefinition,
    Response,
    Security,
    DataType,
    ContainerType,
    Unit,
    SingularResponseContent,
    ArrayResponseContent,
    DatumKey,
    Datum
)
from typing import Union, List

class ResponseMapper:
    """ Defines how resolved values are mapped into input responses
        Default simply copies the values across - derived mappers can make adjustments to suit end-user use cases

        Constructor Arguments:
            applies_to: List[DatumKey] = None -- The fields this mapping should be applied to. If not set will apply to all fields
    """

    def __init__(self, applies_to: List[DatumKey] = None):
        self.__applies_to = applies_to

    def applies_to(self, field: InputDefinition) -> bool:
        if field is not None:
            return self.__applies_to is None or field.datum_key in self.__applies_to
        return False

    def container_type(self, input_def: InputDefinition, response: Response) -> ContainerType:
        return response.container_type

    def data_type(self, input_def: InputDefinition, response: Response) -> DataType:
        return response.data_type

    def source(self, input_def: InputDefinition, response: Response) -> str:
        return response.source

    def timestamp(self, input_def: InputDefinition, response: Response) -> str:
        return response.timestamp

    def unit(self, input_def: InputDefinition, response: Response) -> Union[Unit, None]:
        return response.unit

    def singular_response_content(self, input_def: InputDefinition, response: Response) -> Union[SingularResponseContent, None]:
        return response.singular_response_content

    def array_response_content(self, input_def: InputDefinition, response: Response) -> Union[ArrayResponseContent, None]:
        return response.array_response_content

    def encrypted_response_content(self, input_def: InputDefinition, response: Response) -> Union[str, None]:
        return response.encrypted_response_content

    def security(self, input_def: InputDefinition, response: Response) -> Union[Security, None]:
        return response.security
